[tox]
min_version = 4
no_package = true
envlist =
    flake8
    doc8
    pydocstyle
    docs
    black-check
    isort-check
    build-{lin,mac,win}
    coverage
labels =
    lint = flake8, doc8, pydocstyle, black-check, isort-check
    format = black-format, isort-format
    docs = docs
    build = build-{lin,mac,win}
    test = coverage
    publish = publish-{lin,mac,win}

[flake8]
max-line-length = 80
select = C,E,F,W,B,B9
ignore = B305,B905,E203,E402,E501,E722,F401

[doc8]
ignore = D002,D004
max-line-length = 80

[testenv]
description = Run test suite with code coverage
platform =
    lin: linux
    mac: darwin
    win: win32
allowlist_externals = coverage
passenv = SPOTIFY*,TEKORE*
commands = coverage run
           coverage report

[testenv:coverage]
; Inherit everything from testenv

[testenv:doc8]
description = Check documentation .rst files
allowlist_externals = doc8
commands = doc8 docs/src

[testenv:flake8]
description = Check code style
allowlist_externals = flake8
commands = flake8 src tests

[testenv:pydocstyle]
description = Check documentation string style
allowlist_externals = pydocstyle
commands = pydocstyle src

[testenv:docs]
description = Build Sphinx documentation
allowlist_externals = sphinx-build
change_dir = docs
commands = sphinx-build -M html src build

[testenv:black-check]
description = Check code formatting
allowlist_externals = black
commands = black . --check

[testenv:black-format]
description = Format code
allowlist_externals = black
commands = black .

[testenv:isort-check]
description = Check import sorting
allowlist_externals = isort
commands = isort . --check-only

[testenv:isort-format]
description = Format imports
allowlist_externals = isort
commands = isort .

[testenv:build-{lin,mac,win}]
description = Build and check package
deps = -r requirements/build
allowlist_externals = rm, cmd
commands =
    python -m build
    twine check --strict dist/*
commands_post =
    lin,mac: rm -r dist
    win: cmd /c rmdir /s /q dist

[testenv:publish-{lin,mac,win}]
description = Build, check and publish package
deps = -r requirements/build
allowlist_externals = rm, cmd
commands_pre =
    lin,mac: rm -r dist
    win: cmd /c rmdir /s /q dist
commands =
    python -m build
    twine check --strict dist/*
    twine upload dist/*
commands_post =
    lin,mac: rm -r dist
    win: cmd /c rmdir /s /q dist
