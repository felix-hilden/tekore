[tox]
min_version = 4
no_package = true
envlist =
    check
    doc8
    docs
    build-{lin,mac,win}
    coverage
labels =
    check = check,doc8
    format = format
    docs = docs
    build = build-{lin,mac,win}
    test = coverage
    publish = publish-{lin,mac,win}

[doc8]
ignore = D002,D004
max-line-length = 80

[testenv]
description = Run test suite with code coverage
platform =
    lin: linux
    mac: darwin
    win: win32
allowlist_externals = coverage
passenv = SPOTIFY*,TEKORE*
commands = coverage run
           coverage report

[testenv:coverage]
; Inherit everything from testenv

[testenv:doc8]
description = Check documentation .rst files
allowlist_externals = doc8
commands = doc8 docs/src

[testenv:docs]
description = Build Sphinx documentation
allowlist_externals = sphinx-build
change_dir = docs
commands = sphinx-build -M html src build

[testenv:check]
description = Check code style
allowlist_externals = ruff
commands =
    ruff format --check
	ruff check

[testenv:format]
description = Format code
allowlist_externals = ruff
commands =
    ruff format
	ruff check --fix

[testenv:build-{lin,mac,win}]
description = Build and check package
deps = -r requirements/build
allowlist_externals = rm, cmd
commands =
    python -m build
    twine check --strict dist/*
commands_post =
    lin,mac: rm -r dist
    win: cmd /c rmdir /s /q dist

[testenv:publish-{lin,mac,win}]
description = Build, check and publish package
deps = -r requirements/build
allowlist_externals = rm, cmd
commands =
    python -m build
    twine check --strict dist/*
    twine upload dist/* --config-file .pypirc
commands_post =
    lin,mac: rm -r dist
    win: cmd /c rmdir /s /q dist
